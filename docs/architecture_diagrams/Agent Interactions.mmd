// Tuxedo Link - Agent Interactions

// Planning Agent (Orchestrator)
planner [label: "PlanningAgent\n(Orchestrator)", icon: brain, color: orange]

// Worker Agents
profile [label: "ProfileAgent", icon: chat, color: purple]
petfinder [label: "PetfinderAgent", icon: api, color: blue]
rescue [label: "RescueGroupsAgent", icon: api, color: blue]
dedup [label: "DeduplicationAgent", icon: filter, color: cyan]
matching [label: "MatchingAgent", icon: search, color: green]
email [label: "EmailAgent", icon: email, color: red]

// Data Stores
db [label: "DatabaseManager", icon: database, color: gray]
vectordb [label: "VectorDBManager", icon: database, color: gray]

// External
openai [label: "OpenAI API", icon: openai, color: green]
apis [label: "External APIs", icon: api, color: blue]
sendgrid [label: "SendGrid", icon: email, color: red]

// Orchestration
planner > profile: 1. Extract preferences
profile > openai: API call
openai > profile: Structured output
profile > planner: CatProfile

planner > petfinder: 2. Search (parallel)
planner > rescue: 2. Search (parallel)
petfinder > apis: API request
rescue > apis: API request
apis > petfinder: Cat data
apis > rescue: Cat data
petfinder > planner: Cats list
rescue > planner: Cats list

planner > dedup: 3. Remove duplicates
dedup > db: Check cache
db > dedup: Cached embeddings
dedup > planner: Unique cats

planner > db: 4. Cache results
planner > vectordb: 5. Update embeddings

planner > matching: 6. Find matches
matching > vectordb: Vector search
matching > db: Metadata filter
vectordb > matching: Similar cats
db > matching: Filtered cats
matching > planner: Ranked matches

planner > email: 7. Send notifications (if alert)
email > sendgrid: API call
sendgrid > email: Delivery status